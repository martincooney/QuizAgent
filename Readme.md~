
"QUIZ GIVING AGENT"

1) Basic Concept

"QUIZ GIVING AGENT", or QuizAgent for short, is a pedagogical tool.
Students log in, try to answer quizzes, then get feedback (answers, and scores).
The goal is to give feedback on a student's progress in a way that is fun, personalized, asynchronous, and continuous (e.g., so they can find out fast about gaps in their learning).
It's a basic platform which we can develop and try to test stuff we are doing (e.g. in research) and accommodate diverse groups of students with different knowledge and ways of thinking.
QuizAgent was created for research, so more details will be given in an academic paper (if you use this code for research, please cite it, thank you!).

2) Content (languages, libraries, and files used) 

quiz_agent.py                     main code
agent_data/agent_personData.txt   stores info which courses users have
agent_data/agent_quizData.txt     stores info on which quizzes are available for courses
agent_data/quizzes folder         stores image files with quiz questions and answers
agent_data/students folder        stores each student's history of answering quizzes
agent_data/logfiles folder        stores all interactions by day
agent_data/photos folder          optional: if permitted, photos can also be snapped
agent_data/speech_rec folder      contains files for pocketsphinx
Readme.md                         this description

2) Setup:

You need a computer running Linux with a webcamera connected to it, ROS (Indigo), OpenCV, python.
Add a Haar cascade file like "haarcascade_frontalface_alt_tree.xml" to the agent_data folder.
Update all paths in the python file to make sure they are correct.
(Do what you need to with the speech recognition files if you want to try this.)

3) Basic example of how to use:

-Start 4 terminals
-In the first type "roscore"
-In the second type "rosrun sound_play soundplay_node.py" (optional: if you want to hear the agent speak)
-In the third type "roslaunch pocketsphinx vagent.launch" (optional: if you want the agent to hear what you say)
-In the last, go into the directory with your python file; e.g.: "cd ros_ws/src/hpc/src/"
Then start the program: "rosrun hpc quiz_agent.py"
A window will appear.
Type "1111" (an example code for a user) and press return (or click start) to log in.
Click on a quiz.
Type something and press return (or click Answers).
Click Back to try another.
When you are done, press "q", then the up arrow on your keyboard, to quit.

For further experiments, please feel free to try interacting with the agent in various ways (clicking on its face, moving your face in front of the camera at sufficient distance, etc); look in the code for other things you can try (e.g., auto logout); then try make your own quizzes and user/course info.

4) Licenses

For this author's code and data, the MIT license applies:

Copyright 2019 Martin Cooney 

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated dataset and documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.



